#!/usr/bin/env perl

use v5.14;
use strict;
use warnings;

package DebugServer;
use base qw(HTTP::Server::Simple::CGI);
use HTTP::Server::Simple::Static;
use FindBin qw($Bin);

sub handle_request {
    my ($self, $cgi) = @_;
    return $self->serve_static( $cgi, "$Bin/output" );
}

package main;

use File::Find;
use Text::Markdown qw(markdown);
use YAML qw(LoadFile);
use Template::Toolkit::Simple;
use FindBin qw($Bin);

my $option = shift @ARGV;
$option = 'default' if not defined $option;

my $config = LoadFile 'config.yml'
  or die "You must specify a config.yml file: $!";

sub process_page {
    return unless -f;
    say "File: $_";
    my $doc      = LoadFile $_;
    my $contents = $doc->{contents};
    $contents = markdown $contents if $doc->{format} eq 'markdown';
    $_ =~ s/(\S)\.yml/$1/;

    my $final = tt->absolute(1)->render(
        "$Bin/templates/$doc->{template}.tt",
        {
            title   => $doc->{name},
            content => $contents,
            styles  => $doc->{styles},
            scripts => $doc->{scripts},
        }
    );

    my $outname = $doc->{slug} // $_;
    open my $out, '>', "$Bin/output/$outname.html";
    print $out $final;
    close $out;
}

my %action;
%action = (
    before => sub {
        find( \&process_page, "src/" );
        `cp -r static output`;
    },
    debug => sub {
        $action{before}->();
        my $server = new DebugServer;
        $server->run();
    },
    default => sub {
        $action{before}->();
        `rsync -r -t -v output/ $config->{dest}`;
    },
    markdown => sub {
        my $page = shift @ARGV;
        my $doc = LoadFile "src/$page.yml";
        my $contents = $doc->{contents};
        say $contents;
        say "***";
        my $processed = markdown $contents
            or die "Error: $!";
        say $processed;
    },
);

$action{$option}->();
